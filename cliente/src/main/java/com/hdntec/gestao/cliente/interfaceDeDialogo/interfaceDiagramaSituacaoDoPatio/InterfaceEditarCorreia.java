/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InterfaceEditarCorreia.java
 *
 * Created on 09/01/2009, 09:45:18
 */
package com.hdntec.gestao.cliente.interfaceDeDialogo.interfaceDiagramaSituacaoDoPatio;

import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import com.hdntec.gestao.cliente.messagens.InterfaceMensagem;
import com.hdntec.gestao.cliente.planoDeEmpilhamentoERecuperacaoCliente.atualizacao.edicao.AtualizacaoEdicaoCorreia;
import com.hdntec.gestao.cliente.util.telas.DSSStockyardTelaUtil;
import com.hdntec.gestao.cliente.util.texto.DSSStockyardFuncoesTexto;
import com.hdntec.gestao.cliente.util.texto.FixedLengthDocument;
import com.hdntec.gestao.domain.planta.dao.CorreiaDAO;
import com.hdntec.gestao.domain.planta.enums.EstadoMaquinaEnum;
import com.hdntec.gestao.exceptions.ErroSistemicoException;
import com.hdntec.gestao.exceptions.ValidacaoCampoException;
import com.hdntec.gestao.util.PropertiesUtil;

/**
 *
 * @author Ricardo Trabalho
 */
public abstract class InterfaceEditarCorreia extends javax.swing.JPanel {

    private Boolean operacaoCanceladaPeloUsuario;

    private InterfaceMensagem interfaceMensagem;

    private Double taxaDeOperacao = null;

    private EstadoMaquinaEnum estado = null;

    private InterfaceCorreia interfaceCorreia;

    /** Creates new form InterfaceEditarCorreia */
    public InterfaceEditarCorreia(InterfaceCorreia interfaceCorreia) {
        initComponents();
        this.estado = interfaceCorreia.getCorreiaVisualizada().getEstado();
        this.taxaDeOperacao = interfaceCorreia.getCorreiaVisualizada().getTaxaDeOperacao();
        this.jComboBoxEstado.setSelectedItem(estado);
        this.jTextTaxadeOperacao.setDocument(new FixedLengthDocument(20));
        NumberFormat formatoNumero = NumberFormat.getNumberInstance(new Locale("pt","BR"));
        this.jTextTaxadeOperacao.setText(formatoNumero.format(this.taxaDeOperacao));
        this.interfaceCorreia = interfaceCorreia;
    }

    public abstract void fecharJanela();

    public Boolean getOperacaoCanceladaPeloUsuario() {
        return this.operacaoCanceladaPeloUsuario;
    }

    public void setOperacaoCanceladaPeloUsuario(Boolean operacaoCanceladaPeloUsuario) {
        this.operacaoCanceladaPeloUsuario = operacaoCanceladaPeloUsuario;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jltaxaOperacao = new javax.swing.JLabel();
        jTextTaxadeOperacao = new javax.swing.JTextField();
        cmdConfirmar = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();
        jComboBoxEstado = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder(PropertiesUtil.getMessage("titulo.editar.dados.correia")));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText(PropertiesUtil.getMessage("label.estado.correia"));

        jltaxaOperacao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jltaxaOperacao.setText(PropertiesUtil.getMessage("label.taxa.de.operacao"));

        jTextTaxadeOperacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        StringBuffer value = new StringBuffer();
        value.append(PropertiesUtil.buscarPropriedade("tela.diretorio.imagens")).append("/confirmar.png");
        cmdConfirmar.setIcon(new javax.swing.ImageIcon(value.toString())); // NOI18N
        cmdConfirmar.setText(PropertiesUtil.getMessage("botao.confirmar"));
        cmdConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdConfirmarActionPerformed(evt);
            }
        });
        value = new StringBuffer();
        value.append(PropertiesUtil.buscarPropriedade("tela.diretorio.imagens")).append("/exit.png");        
        cmdCancelar.setIcon(new javax.swing.ImageIcon(value.toString())); // NOI18N
        cmdCancelar.setText(PropertiesUtil.getMessage("botao.desistir"));
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel(new EstadoMaquinaEnum[] { EstadoMaquinaEnum.OPERACAO, EstadoMaquinaEnum.MANUTENCAO, EstadoMaquinaEnum.OCIOSA }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jltaxaOperacao)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextTaxadeOperacao, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmdCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdConfirmar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jltaxaOperacao)
                    .addComponent(jTextTaxadeOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdCancelar)
                    .addComponent(cmdConfirmar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
        this.operacaoCanceladaPeloUsuario = Boolean.TRUE;
        fecharJanela();
        // chegando ate o JDialog
        DSSStockyardTelaUtil.getParentDialog(this).setVisible(false);
    }//GEN-LAST:event_cmdCancelarActionPerformed

    private void cmdConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdConfirmarActionPerformed
        AtualizacaoEdicaoCorreia atualizacao = new AtualizacaoEdicaoCorreia(this.interfaceCorreia, this.taxaDeOperacao, this.estado);
        if (this.setObjetosRetorno()) {
            this.interfaceCorreia.getInterfaceDSP().getControladorDSP().getControladorAtualizacaoEdicao().adicionarEdicao(atualizacao);
            interfaceCorreia.getCorreiaVisualizada().setEstado(this.getEstado());
            interfaceCorreia.getCorreiaVisualizada().setTaxaDeOperacao(this.getTaxaDeOperacao());
            
            CorreiaDAO dao = new CorreiaDAO();
            try {
                dao.salvaCorreia(interfaceCorreia.getCorreiaVisualizada());
            } catch (ErroSistemicoException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            dao = null;
            
            //fecha janeja
            this.operacaoCanceladaPeloUsuario = Boolean.FALSE;
            // chegando ate o JDialog
            DSSStockyardTelaUtil.getParentDialog(this).setVisible(false);
        }
      
    }//GEN-LAST:event_cmdConfirmarActionPerformed

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdConfirmar;
    private javax.swing.JComboBox jComboBoxEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextTaxadeOperacao;
    private javax.swing.JLabel jltaxaOperacao;
    // End of variables declaration//GEN-END:variables

    public void setEstado(EstadoMaquinaEnum estado) {
        this.estado = estado;
    }

    public EstadoMaquinaEnum getEstado() {
        return this.estado;
    }

    public void setTaxaDeOperacao(Double taxaDeOperacao) {
        this.taxaDeOperacao = taxaDeOperacao;
    }

    public Double getTaxaDeOperacao() {
        return this.taxaDeOperacao;
    }

    private boolean setObjetosRetorno() {

        try{
            //edita a taxa de operacao da correia
            this.setTaxaDeOperacao(Double.valueOf( DSSStockyardFuncoesTexto.removeCaracterEspecificado(this.jTextTaxadeOperacao.getText(), "." )));
            if(getTaxaDeOperacao() <= 0){
                List<String> listaParametros = new ArrayList<String>();
                listaParametros.add(jltaxaOperacao.getText());
                throw new ValidacaoCampoException("exception.validacao.campo.negativo", listaParametros);
            }
            //edita o estado da correia
            this.setEstado((EstadoMaquinaEnum)jComboBoxEstado.getSelectedItem());
            
            return true;
        } catch (NumberFormatException nbfe) {
        	interfaceCorreia.getControladorDSP().getInterfaceInicial().desativarMensagemProcessamento();
            interfaceMensagem = new InterfaceMensagem();
            interfaceMensagem.setTipoMensagem(InterfaceMensagem.MENSAGEM_TIPO_ALERTA);
            interfaceMensagem.setDescricaoMensagem(PropertiesUtil.buscarPropriedade("exception.validacao.taxaoperacao.correia"));
            interfaceCorreia.getControladorDSP().ativarMensagem(interfaceMensagem);
            return false;
        } catch (ValidacaoCampoException ex){
        	interfaceCorreia.getControladorDSP().getInterfaceInicial().desativarMensagemProcessamento();
            interfaceMensagem = new InterfaceMensagem();
            interfaceMensagem.setTipoMensagem(InterfaceMensagem.MENSAGEM_TIPO_ALERTA);
            interfaceMensagem.setDescricaoMensagem(ex.getMessage());
            interfaceCorreia.getControladorDSP().ativarMensagem(interfaceMensagem);
            return false;
        }

    }
}
