/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.hdntec.gestao.cliente.util.datahora;

import java.text.SimpleDateFormat;
import java.util.Date;

import com.hdntec.gestao.cliente.interfaceDeDialogo.interfaceComandos.InterfacePesquisa;
import com.hdntec.gestao.util.PropertiesUtil;


/**
 * ************************ COMPONENTE DATA *******************************
 * Esse componente Ã© utilizado nos campos que exigem apenas informacao de data.
 * Utilizado em:
 * Interface de pesquisa nas consultas de campanha de producao e navio:
 * @see InterfacePesquisa
 *
 * @author guilherme
 */
public class CalendarioCFlex extends javax.swing.JPanel implements java.beans.Customizer {

    private Object bean;

    /** Creates new customizer CalendarioCFlex */
    public CalendarioCFlex() {
        initComponents();
        calendario.getFormattedTextField().setEditable(false);
    }

    @Override
    public void setObject(Object bean) {
        this.bean = bean;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendario = new net.sf.nachocalendar.components.DateField();

        setLayout(new java.awt.BorderLayout());
        add(calendario, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private net.sf.nachocalendar.components.DateField calendario;
    // End of variables declaration//GEN-END:variables


    /**
     * Retorna a data no formato dd/MM/yyyy
     * @return
     */
    public String getDataFormatada() {
        //Calendar para Manipulacao de Data.
        SimpleDateFormat sdf = new SimpleDateFormat(PropertiesUtil.buscarPropriedade("formato.campo.data"));
        return sdf.format((Date)getCalendario().getValue());
    }

    /**
     * @return the calendario
     */
    public net.sf.nachocalendar.components.DateField getCalendario() {
        return calendario;
    }

    /**
     * @param calendario the calendario to set
     */
    public void setCalendario(net.sf.nachocalendar.components.DateField calendario) {
        this.calendario = calendario;
    }

    /**
     * Metodo para limpar o calendario.
     * OBS: Inicializa com a data atual.
     */
    public void limpaData () {
        getCalendario().setBaseDate(new Date());
    }

    public void setData (Date data) {
        getCalendario().setBaseDate(data);
    }

    
}
